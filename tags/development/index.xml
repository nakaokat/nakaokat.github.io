<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on My Notes</title>
    <link>http://nakaokat.github.io/tags/development/</link>
    <description>Recent content in Development on My Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 04 Jul 2015 19:03:02 +0900</lastBuildDate>
    <atom:link href="http://nakaokat.github.io/tags/development/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Hugo(静的Webサイトエンジン)とは</title>
      <link>http://nakaokat.github.io/post/hugo/</link>
      <pubDate>Sat, 04 Jul 2015 19:03:02 +0900</pubDate>
      
      <guid>http://nakaokat.github.io/post/hugo/</guid>
      <description>

&lt;h3 id=&#34;1-hogo-とは:32ab7241d48fcc174c877413a917f8cf&#34;&gt;1. Hogo とは&lt;/h3&gt;

&lt;p&gt;Hugoとは静的サイトをシンプルにつくることのできるツールです。生成されるwebサイトは、WordpressやTumblrなどでつくったブログにも見えます。しかしWordpresssなどと異なり、コンテンツの作成はすべてローカルで行います。&lt;/p&gt;

&lt;p&gt;公式サイト &lt;a href=&#34;http://gohugo.io/&#34;&gt;http://gohugo.io/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-hogo-の特徴とメリット:32ab7241d48fcc174c877413a917f8cf&#34;&gt;2. Hogo の特徴とメリット&lt;/h3&gt;

&lt;p&gt;HugoはGo言語でつくられています。Go言語はコンパイラ言語なので、インタラプタ言語のPythonでつくられたPelicanや、RubyでつくられたJekyll, Octpress よりも高速に動作するのが特徴です。&lt;/p&gt;

&lt;h3 id=&#34;3-hugo-の導入と使いかた:32ab7241d48fcc174c877413a917f8cf&#34;&gt;3. Hugo の導入と使いかた&lt;/h3&gt;

&lt;p&gt;Hogoはコマンドラインで使います。コマンドラインの基本的な操作ができる必要があります。Hogoの使用にはGo言語の知識は必要ありません。&lt;/p&gt;

&lt;p&gt;具体的なHugoのつかいかたは公式ドキュメント( &lt;a href=&#34;http://gohugo.io/overview/introduction/&#34;&gt;http://gohugo.io/overview/introduction/&lt;/a&gt; )を参照してください。&lt;/p&gt;

&lt;p&gt;Hugoつくった静的サイトをWebで公開するにはFTPなどでサーバーにアップロードするだけです。Github Pages とあわせて使うと、簡単に無料で自分のWebサイトを公開することができます。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>FlaskをHerokuで動かす</title>
      <link>http://nakaokat.github.io/post/flask_heroku/</link>
      <pubDate>Wed, 01 Jul 2015 14:44:56 +0900</pubDate>
      
      <guid>http://nakaokat.github.io/post/flask_heroku/</guid>
      <description>

&lt;h3 id=&#34;1-flask-を-herokuで動かす:cb0cc48d0a7f78f425de2c2eae671543&#34;&gt;1. Flask を Herokuで動かす&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Flask: Pythonの軽量フレームワーク&lt;/li&gt;
&lt;li&gt;Heroku: Paas&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;2-introduction-事前準備:cb0cc48d0a7f78f425de2c2eae671543&#34;&gt;2. Introduction 事前準備&lt;/h3&gt;

&lt;p&gt;Heokuのアカウントをつくる&lt;/p&gt;

&lt;p&gt;virtualenvで仮想環境をつくる（省略）&lt;/p&gt;

&lt;p&gt;&lt;code&gt;pip install {package-name}&lt;/code&gt;
pipで必要なパッケージをインストールする&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Flask&lt;/li&gt;
&lt;li&gt;gunicorn: httpサーバー。必須&lt;/li&gt;
&lt;li&gt;postgresql: データベース&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;pip: pythonのパッケージを管理する&lt;/p&gt;

&lt;p&gt;&lt;code&gt;heroku login&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;ログインする&lt;/p&gt;

&lt;h3 id=&#34;3-requirements-txtを用意:cb0cc48d0a7f78f425de2c2eae671543&#34;&gt;3. requirements.txtを用意&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;pip freeze &amp;gt; requirements.txt&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;4-procfileを用意:cb0cc48d0a7f78f425de2c2eae671543&#34;&gt;4. Procfileを用意&lt;/h3&gt;

&lt;p&gt;Procfile: herokuの設定用のテキストファイル&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Procfile&#34;&gt;web: gunicorn {main-file-name}:app --log-file -
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;5-git-用意:cb0cc48d0a7f78f425de2c2eae671543&#34;&gt;5. git 用意&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;git init&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git add {file-name.py}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git commit -m “{commit message}&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;heroku create&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt; git push heroku master&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;scale:cb0cc48d0a7f78f425de2c2eae671543&#34;&gt;scale&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;heroku sacale web=1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;heroku ps&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;確認。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;heroku open&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;ブラウザで開く。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>